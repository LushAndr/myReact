{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TodoList from './Todo/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Нам нужны useState чтобы перерендеривать компонент chekbox при изменении состояния\n  // Ф-ия useState всегда возвращает массив из 2-х эл-ов: состояние и ф-ия изменяющая сост.\n  let [todos] = React.useState([{\n    id: 1,\n    completed: false,\n    title: 'Купить хлеб'\n  }, {\n    id: 2,\n    completed: false,\n    title: 'Купить мсало'\n  }, {\n    id: 3,\n    completed: false,\n    title: 'Купить молоко'\n  }]); // let todos =[\n  //   {id:1, completed: false, title: 'Купить хлеб'},\n  //   {id:2, completed: false, title: 'Купить мсало'},\n  //   {id:3, completed: false, title: 'Купить молоко'},\n  // ]\n\n  function toggleTodo(id) {\n    todos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onToggle: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QTvtrZuETSXl5g6OMRpPMI2orDg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","TodoList","App","todos","useState","id","completed","title","toggleTodo","map","todo"],"sources":["/Users/macbook/Documents/react1/src/App.js"],"sourcesContent":["import React from 'react'\nimport TodoList from './Todo/TodoList'\n\nfunction App() {\n  // Нам нужны useState чтобы перерендеривать компонент chekbox при изменении состояния\n  // Ф-ия useState всегда возвращает массив из 2-х эл-ов: состояние и ф-ия изменяющая сост.\n  let [todos] = React.useState([\n    {id:1, completed: false, title: 'Купить хлеб'},\n    {id:2, completed: false, title: 'Купить мсало'},\n    {id:3, completed: false, title: 'Купить молоко'},\n\n  ])\n  // let todos =[\n  //   {id:1, completed: false, title: 'Купить хлеб'},\n  //   {id:2, completed: false, title: 'Купить мсало'},\n  //   {id:3, completed: false, title: 'Купить молоко'},\n  // ]\n\n  function toggleTodo(id) {\ntodos = todos.map(todo =>{\n  if (todo.id === id) {\n    todo.completed = !todo.completed\n  }\n  return todo\n})\n\n} \n\n\n  return (\n    <div className='wrapper'>\n    <h1>React tutorial</h1>\n    <TodoList todos={todos} onToggle={toggleTodo}/>\n\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA;EACA,IAAI,CAACC,KAAD,IAAUH,KAAK,CAACI,QAAN,CAAe,CAC3B;IAACC,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CAD2B,EAE3B;IAACF,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CAF2B,EAG3B;IAACF,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CAH2B,CAAf,CAAd,CAHa,CASb;EACA;EACA;EACA;EACA;;EAEA,SAASC,UAAT,CAAoBH,EAApB,EAAwB;IAC1BF,KAAK,GAAGA,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAG;MACvB,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;QAClBK,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;MACD;;MACD,OAAOI,IAAP;IACD,CALO,CAAR;EAOC;;EAGC,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,QAAD;MAAU,KAAK,EAAEP,KAAjB;MAAwB,QAAQ,EAAEK;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAjCQN,G;;KAAAA,G;AAmCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}