{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\nimport AddTodo from './Todo/AddTodo';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Нам нужны useState чтобы перерендеривать компонент chekbox при изменении состояния\n  // Ф-ия useState всегда возвращает массив из 2-х эл-ов: состояние и ф-ия изменяющая сост.\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos/?_limit=5') // Добавили лимит чтобы загрузилось только 5 эл-ов\n    .then(response => response.json()).then(todos => {\n      // Сделаем чтобы сервер отвечал на 2с дольше\n      setTimeout(() => {\n        setTodos(todos);\n      }, 2000);\n    }); // Взяли пример с сайта jsonplaceholder.typicode.com\n  }, []); // Этот массив обязательно нужен как список зависимостей для отработки колбэка, нужно чтобы отработал 1 раз \n\n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id)); // Если todo.id !== id то мы оставляем эл-т в массиве\n    // Если = то эл-т удалится\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]));\n  }\n\n  return (\n    /*#__PURE__*/\n    // Нужно обернуть шаблон в этот комп-т чтобы передавать ф-ии сквозь другие комп-ты\n    _jsxDEV(Context.Provider, {\n      value: {\n        removeTodo\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React tutorial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n          onCreate: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), todos.length ? /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          onToggle: toggleTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 12\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Todos!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"Q+SulLHKuBZzk+ag3OV6DHBynQg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","TodoList","Context","AddTodo","Loader","App","todos","setTodos","useState","loading","setLoading","fetch","then","response","json","setTimeout","toggleTodo","id","map","todo","completed","removeTodo","filter","addTodo","title","concat","Date","now","length"],"sources":["/Users/macbook/Documents/react1/src/App.js"],"sourcesContent":["import React, {useEffect} from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\nimport AddTodo from './Todo/AddTodo'\nimport Loader from './Loader'\n\nfunction App() \n{\n  // Нам нужны useState чтобы перерендеривать компонент chekbox при изменении состояния\n  // Ф-ия useState всегда возвращает массив из 2-х эл-ов: состояние и ф-ия изменяющая сост.\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(()=> {\n    fetch('https://jsonplaceholder.typicode.com/todos/?_limit=5')\n    // Добавили лимит чтобы загрузилось только 5 эл-ов\n      .then(response => response.json())\n      .then(todos => {\n        // Сделаем чтобы сервер отвечал на 2с дольше\n        setTimeout(()=>{\n          setTodos(todos)\n        },2000)\n        \n      })\n// Взяли пример с сайта jsonplaceholder.typicode.com\n  },[])\n  // Этот массив обязательно нужен как список зависимостей для отработки колбэка, нужно чтобы отработал 1 раз \n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n  }\n\nfunction removeTodo(id) {\n  setTodos(todos.filter(todo => todo.id !==id)) \n  // Если todo.id !== id то мы оставляем эл-т в массиве\n  // Если = то эл-т удалится\n}\n\nfunction addTodo(title) {\n  setTodos(todos.concat([\n      {\n        title,\n        id: Date.now(),\n        completed: false\n      }\n]))\n}\n\n\n  return (\n    // Нужно обернуть шаблон в этот комп-т чтобы передавать ф-ии сквозь другие комп-ты\n    <Context.Provider value={{removeTodo}}>\n      <div className='wrapper'>\n        <h1>React tutorial</h1>\n        <AddTodo onCreate={addTodo}/>\n\n        {loading && <Loader />}\n        {todos.length ?(\n           <TodoList todos={todos} onToggle={toggleTodo}/>\n        ):(\n          <p>No Todos!</p>\n        )}\n        \n      </div>\n    </Context.Provider>\n  )\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GACA;EAAA;;EACE;EACA;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACS,QAAN,CAAe,IAAf,CAA9B;EAEAR,SAAS,CAAC,MAAK;IACbW,KAAK,CAAC,sDAAD,CAAL,CACA;IADA,CAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGGF,IAHH,CAGQN,KAAK,IAAI;MACb;MACAS,UAAU,CAAC,MAAI;QACbR,QAAQ,CAACD,KAAD,CAAR;MACD,CAFS,EAER,IAFQ,CAAV;IAID,CATH,EADa,CAWjB;EACG,CAZQ,EAYP,EAZO,CAAT,CANF,CAmBE;;EAEA,SAASU,UAAT,CAAoBC,EAApB,EAAwB;IACtBV,QAAQ,CACND,KAAK,CAACY,GAAN,CAAUC,IAAI,IAAI;MAChB,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;QAClBE,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;MACD;;MACD,OAAOD,IAAP;IACD,CALD,CADM,CAAR;EAQD;;EAEH,SAASE,UAAT,CAAoBJ,EAApB,EAAwB;IACtBV,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAWA,EAAhC,CAAD,CAAR,CADsB,CAEtB;IACA;EACD;;EAED,SAASM,OAAT,CAAiBC,KAAjB,EAAwB;IACtBjB,QAAQ,CAACD,KAAK,CAACmB,MAAN,CAAa,CAClB;MACED,KADF;MAEEP,EAAE,EAAES,IAAI,CAACC,GAAL,EAFN;MAGEP,SAAS,EAAE;IAHb,CADkB,CAAb,CAAD,CAAR;EAOD;;EAGC;IAAA;IACE;IACA,QAAC,OAAD,CAAS,QAAT;MAAkB,KAAK,EAAE;QAACC;MAAD,CAAzB;MAAA,uBACE;QAAK,SAAS,EAAC,SAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,OAAD;UAAS,QAAQ,EAAEE;QAAnB;UAAA;UAAA;UAAA;QAAA,QAFF,EAIGd,OAAO,iBAAI,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAJd,EAKGH,KAAK,CAACsB,MAAN,gBACE,QAAC,QAAD;UAAU,KAAK,EAAEtB,KAAjB;UAAwB,QAAQ,EAAEU;QAAlC;UAAA;UAAA;UAAA;QAAA,QADF,gBAGC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFF;AAiBD;;GAnEQX,G;;KAAAA,G;AAqET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}