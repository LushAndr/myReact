{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TodoList from './Todo/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Нам нужны useState чтобы перерендеривать компонент chekbox при изменении состояния\n  // Ф-ия useState всегда возвращает массив из 2-х эл-ов: состояние и ф-ия изменяющая сост.\n  const q = React.useState([{\n    id: 1,\n    completed: false,\n    title: 'Купить хлеб'\n  }, {\n    id: 2,\n    completed: false,\n    title: 'Купить мсало'\n  }, {\n    id: 3,\n    completed: false,\n    title: 'Купить молоко'\n  }]);\n  let todos = [{\n    id: 1,\n    completed: false,\n    title: 'Купить хлеб'\n  }, {\n    id: 2,\n    completed: false,\n    title: 'Купить мсало'\n  }, {\n    id: 3,\n    completed: false,\n    title: 'Купить молоко'\n  }];\n\n  function toggleTodo(id) {\n    todos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onToggle: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vb8ASPdhnQOCEG7dhaGp9mNrn1g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","TodoList","App","q","useState","id","completed","title","todos","toggleTodo","map","todo"],"sources":["/Users/macbook/Documents/react1/src/App.js"],"sourcesContent":["import React from 'react'\nimport TodoList from './Todo/TodoList'\n\nfunction App() {\n  // Нам нужны useState чтобы перерендеривать компонент chekbox при изменении состояния\n  // Ф-ия useState всегда возвращает массив из 2-х эл-ов: состояние и ф-ия изменяющая сост.\n  const q = React.useState([\n    {id:1, completed: false, title: 'Купить хлеб'},\n    {id:2, completed: false, title: 'Купить мсало'},\n    {id:3, completed: false, title: 'Купить молоко'},\n\n  ])\n  let todos =[\n    {id:1, completed: false, title: 'Купить хлеб'},\n    {id:2, completed: false, title: 'Купить мсало'},\n    {id:3, completed: false, title: 'Купить молоко'},\n\n\n  ]\n\n  function toggleTodo(id) {\ntodos = todos.map(todo =>{\n  if (todo.id === id) {\n    todo.completed = !todo.completed\n  }\n  return todo\n})\n\n} \n\n\n  return (\n    <div className='wrapper'>\n    <h1>React tutorial</h1>\n    <TodoList todos={todos} onToggle={toggleTodo}/>\n\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA;EACA,MAAMC,CAAC,GAAGH,KAAK,CAACI,QAAN,CAAe,CACvB;IAACC,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CADuB,EAEvB;IAACF,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CAFuB,EAGvB;IAACF,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CAHuB,CAAf,CAAV;EAMA,IAAIC,KAAK,GAAE,CACT;IAACH,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CADS,EAET;IAACF,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CAFS,EAGT;IAACF,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CAHS,CAAX;;EAQA,SAASE,UAAT,CAAoBJ,EAApB,EAAwB;IAC1BG,KAAK,GAAGA,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAG;MACvB,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAhB,EAAoB;QAClBM,IAAI,CAACL,SAAL,GAAiB,CAACK,IAAI,CAACL,SAAvB;MACD;;MACD,OAAOK,IAAP;IACD,CALO,CAAR;EAOC;;EAGC,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,QAAD;MAAU,KAAK,EAAEH,KAAjB;MAAwB,QAAQ,EAAEC;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAnCQP,G;;KAAAA,G;AAqCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}