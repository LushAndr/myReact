{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react1/src/Todo/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useInputValue() {\n  _s();\n\n  let defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  const [value, setValue] = useState('defaultValue');\n}\n\n_s(useInputValue, \"EDcab9X70ryCTM+5LGm3Vpbd0AY=\");\n\nfunction AddTodo(_ref) {\n  let {\n    onCreate\n  } = _ref;\n\n  // Отменяем дефолтное поведение чтобы стр не ребуталась\n  function submitHandler(event) {\n    event.preventDefault(); // Удаляем лишние пробелы\n\n    if (value.trim()) {\n      onCreate(value); // Удалим строчку после того как создали\n\n      setValue('');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: event => setValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AddTodo;\nAddTodo.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","PropTypes","useInputValue","defaultValue","value","setValue","AddTodo","onCreate","submitHandler","event","preventDefault","trim","marginBottom","target","propTypes","func","isRequired"],"sources":["/Users/macbook/Documents/react1/src/Todo/AddTodo.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport PropTypes from 'prop-types'\n\nfunction useInputValue(defaultValue=''){\n    const [value, setValue] = useState('defaultValue')\n\n}\n\nfunction AddTodo({onCreate}) {\n\n    // Отменяем дефолтное поведение чтобы стр не ребуталась\n    function submitHandler(event) {\n        event.preventDefault()\n\n    // Удаляем лишние пробелы\n        if (value.trim()) {\n            onCreate(value)\n             // Удалим строчку после того как создали\n            setValue('')\n\n    }\n}\n\n    return (\n        <form style={{marginBottom: '1rem'}} onSubmit={submitHandler}>\n            <input value ={value} onChange={event => setValue(event.target.value)}/>\n            <button type=\"submit\">Add todo</button>\n\n        </form>\n    )\n\n}\n\nAddTodo.propTypes = {\n    onCreate: PropTypes.func.isRequired\n}\n\nexport default AddTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,aAAT,GAAuC;EAAA;;EAAA,IAAhBC,YAAgB,uEAAH,EAAG;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,cAAD,CAAlC;AAEH;;GAHQE,a;;AAKT,SAASI,OAAT,OAA6B;EAAA,IAAZ;IAACC;EAAD,CAAY;;EAEzB;EACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;IAC1BA,KAAK,CAACC,cAAN,GAD0B,CAG9B;;IACI,IAAIN,KAAK,CAACO,IAAN,EAAJ,EAAkB;MACdJ,QAAQ,CAACH,KAAD,CAAR,CADc,CAEb;;MACDC,QAAQ,CAAC,EAAD,CAAR;IAEP;EACJ;;EAEG,oBACI;IAAM,KAAK,EAAE;MAACO,YAAY,EAAE;IAAf,CAAb;IAAqC,QAAQ,EAAEJ,aAA/C;IAAA,wBACI;MAAO,KAAK,EAAGJ,KAAf;MAAsB,QAAQ,EAAEK,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACI,MAAN,CAAaT,KAAd;IAAjD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;KAvBQE,O;AAyBTA,OAAO,CAACQ,SAAR,GAAoB;EAChBP,QAAQ,EAAEN,SAAS,CAACc,IAAV,CAAeC;AADT,CAApB;AAIA,eAAeV,OAAf"},"metadata":{},"sourceType":"module"}