{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\nimport AddTodo from './Todo/AddTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Нам нужны useState чтобы перерендеривать компонент chekbox при изменении состояния\n  // Ф-ия useState всегда возвращает массив из 2-х эл-ов: состояние и ф-ия изменяющая сост.\n  const [todos, setTodos] = React.useState([{\n    id: 1,\n    completed: false,\n    title: 'Купить хлеб'\n  }, {\n    id: 2,\n    completed: true,\n    title: 'Купить мсало'\n  }, {\n    id: 3,\n    completed: false,\n    title: 'Купить молоко'\n  }]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos/?_дшьше=5') // Добавили лимит чтобы загрузилось только 5 эл-ов\n    .then(response => response.json()).then(json => console.log(json)); // Взяли пример с сайта jsonplaceholder.typicode.com\n  }, []); // Этот массив обязательно нужен как список зависимостей для отработки колбэка, нужно чтобы отработал 1 раз \n\n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id)); // Если todo.id !== id то мы оставляем эл-т в массиве\n    // Если = то эл-т удалится\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]));\n  }\n\n  return (\n    /*#__PURE__*/\n    // Нужно обернуть шаблон в этот комп-т чтобы передавать ф-ии сквозь другие комп-ты\n    _jsxDEV(Context.Provider, {\n      value: {\n        removeTodo\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React tutorial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n          onCreate: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), todos.length ? /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          onToggle: toggleTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 12\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Todos!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"boAmWkKlJjqt7Or+4YUFimr8LQs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","TodoList","Context","AddTodo","App","todos","setTodos","useState","id","completed","title","fetch","then","response","json","console","log","toggleTodo","map","todo","removeTodo","filter","addTodo","concat","Date","now","length"],"sources":["/Users/macbook/Documents/react1/src/App.js"],"sourcesContent":["import React, {useEffect} from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\nimport AddTodo from './Todo/AddTodo'\n\nfunction App() \n{\n  // Нам нужны useState чтобы перерендеривать компонент chekbox при изменении состояния\n  // Ф-ия useState всегда возвращает массив из 2-х эл-ов: состояние и ф-ия изменяющая сост.\n  const  [todos, setTodos] = React.useState([\n    {id:1, completed: false, title: 'Купить хлеб'},\n    {id:2, completed: true, title: 'Купить мсало'},\n    {id:3, completed: false, title: 'Купить молоко'},\n\n  ])\n\n  useEffect(()=> {\n    fetch('https://jsonplaceholder.typicode.com/todos/?_дшьше=5')\n    // Добавили лимит чтобы загрузилось только 5 эл-ов\n      .then(response => response.json())\n      .then(json => console.log(json))\n// Взяли пример с сайта jsonplaceholder.typicode.com\n  },[])\n  // Этот массив обязательно нужен как список зависимостей для отработки колбэка, нужно чтобы отработал 1 раз \n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n  }\n\nfunction removeTodo(id) {\n  setTodos(todos.filter(todo => todo.id !==id)) \n  // Если todo.id !== id то мы оставляем эл-т в массиве\n  // Если = то эл-т удалится\n}\n\nfunction addTodo(title) {\n  setTodos(todos.concat([\n      {\n        title,\n        id: Date.now(),\n        completed: false\n      }\n]))\n}\n\n\n  return (\n    // Нужно обернуть шаблон в этот комп-т чтобы передавать ф-ии сквозь другие комп-ты\n    <Context.Provider value={{removeTodo}}>\n      <div className='wrapper'>\n        <h1>React tutorial</h1>\n        <AddTodo onCreate={addTodo}/>\n        {todos.length ?(\n           <TodoList todos={todos} onToggle={toggleTodo}/>\n        ):(\n          <p>No Todos!</p>\n        )}\n        \n      </div>\n    </Context.Provider>\n  )\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;;AAEA,SAASC,GAAT,GACA;EAAA;;EACE;EACA;EACA,MAAO,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,CACxC;IAACC,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CADwC,EAExC;IAACF,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,IAAlB;IAAwBC,KAAK,EAAE;EAA/B,CAFwC,EAGxC;IAACF,EAAE,EAAC,CAAJ;IAAOC,SAAS,EAAE,KAAlB;IAAyBC,KAAK,EAAE;EAAhC,CAHwC,CAAf,CAA3B;EAOAV,SAAS,CAAC,MAAK;IACbW,KAAK,CAAC,sDAAD,CAAL,CACA;IADA,CAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGGF,IAHH,CAGQE,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAHhB,EADa,CAKjB;EACG,CANQ,EAMP,EANO,CAAT,CAVF,CAiBE;;EAEA,SAASG,UAAT,CAAoBT,EAApB,EAAwB;IACtBF,QAAQ,CACND,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAI;MAChB,IAAIA,IAAI,CAACX,EAAL,KAAYA,EAAhB,EAAoB;QAClBW,IAAI,CAACV,SAAL,GAAiB,CAACU,IAAI,CAACV,SAAvB;MACD;;MACD,OAAOU,IAAP;IACD,CALD,CADM,CAAR;EAQD;;EAEH,SAASC,UAAT,CAAoBZ,EAApB,EAAwB;IACtBF,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAWA,EAAhC,CAAD,CAAR,CADsB,CAEtB;IACA;EACD;;EAED,SAASc,OAAT,CAAiBZ,KAAjB,EAAwB;IACtBJ,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAa,CAClB;MACEb,KADF;MAEEF,EAAE,EAAEgB,IAAI,CAACC,GAAL,EAFN;MAGEhB,SAAS,EAAE;IAHb,CADkB,CAAb,CAAD,CAAR;EAOD;;EAGC;IAAA;IACE;IACA,QAAC,OAAD,CAAS,QAAT;MAAkB,KAAK,EAAE;QAACW;MAAD,CAAzB;MAAA,uBACE;QAAK,SAAS,EAAC,SAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,OAAD;UAAS,QAAQ,EAAEE;QAAnB;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGjB,KAAK,CAACqB,MAAN,gBACE,QAAC,QAAD;UAAU,KAAK,EAAErB,KAAjB;UAAwB,QAAQ,EAAEY;QAAlC;UAAA;UAAA;UAAA;QAAA,QADF,gBAGC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFF;AAeD;;GA/DQb,G;;KAAAA,G;AAiET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}